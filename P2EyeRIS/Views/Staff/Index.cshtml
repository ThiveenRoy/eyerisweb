@model IEnumerable<P2EyeRIS.Models.Student>

@{
    ViewData["Title"] = "Staff Mainpage";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var tempModuleList = (List<string>)ViewData["ModuleList"];
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Material Design Bootstrap</title>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css">
    <!-- Bootstrap core CSS -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Material Design Bootstrap -->
    <link href="~/css/mdb.min.css" rel="stylesheet">
    <!-- Your custom styles (optional) -->
    @*<link href="~/css/style.css" rel="st+ylesheet">*@
</head>

<body>
    <div class="container text-center my-3">
        <div align="left">
            Welcome, @ViewData["StaffName"]!
            <p>Choose a Module+Class:</p>
            <select id="ddList" onchange="getModuleClassList();"></select>
        </div>
        <div align="right" style="position:relative; bottom: 10px;">
            <input type="text" id="searchInput" onkeyup="searchFunction();" placeholder="Search..." />
        </div>




        @{await Html.RenderPartialAsync("trystudent");}
        @*@{await Html.RenderPartialAsync("_StudentListPartial");}*@




    </div>
</body>
</html>


@*
    EXACTLY THIS PART IS A LITTLE BIT FAULTY, THAT'S WHY
    THE FUNCTION CANNOT PARSE THE STRING PROPERLY,
    BECAUSE THIS JAVASCRIPT FUNCT DIDNT MANAGE TO PASS
    selectedModuleClass AND range INTO THE FUNCTION
*@

<script language="javascript">
        function getModuleClassList() {
            var range = "A7:B14";
            var sheet = $("ddList").val();
            var elm = document.getElementById('ddList').value;


            $.ajax({
                type: "POST",
                url: "Staff/ShowStudentList",
                data: {sheet: elm, range: range},
                success: function (response) {
                    alert("Dropdown list value changed.");
                    $('#testTable').empty();
                    $('#searchInput').empty();
                    $('#testTable').html(response);
                }
            });
        }
</script>
<script language="javascript">
    function searchFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("testTable");
        tr = table.getElementsByTagName("tr");

        for (i = 1; i < tr.length; i++) { //skip headers
            td = tr[i];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                }
                else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>

@*<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script type="text/jscript">

        $(document).ready(function () {
            $("#demo").load('/Controller/StaffController/ShowStudentList');
        });
    </script>*@
<script language="javascript">
 //populate dropdown list
        (function () {
            var elm = document.getElementById('ddList'), //get selected value
                df = document.createDocumentFragment(); //create a document fragment to hold the options while building

            @foreach(var i in tempModuleList) //loop through number of moduleClasses that the lect teach, for now, hardcoded
            {
                <text>
                    option = document.createElement('option');
                    option.value = '@i'; //set value to module in the list
                    option.appendChild(document.createTextNode(option.value)); //set textContent in a safe way
                    df.appendChild(option); //append option to document fragment
                </text>
            }

            elm.appendChild(df); //append the document fragment to the DOM
            elm.load()
        }());
</script>


