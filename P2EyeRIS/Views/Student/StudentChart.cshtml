@model IEnumerable<P2EyeRIS.Models.StudentGrade>

@{
    ViewData["Title"] = "Test";
}

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>Material Design Bootstrap</title>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css">
    <!-- Bootstrap core CSS -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Material Design Bootstrap -->
    <link href="~/css/mdb.min.css" rel="stylesheet">
    <!-- Your custom styles (optional) -->
    @*<link href="~/css/style.css" rel="stylesheet">*@
</head>


<h1>Testing Charts from Chart.js</h1>
<body>
    <!--Here is the part for chart-->
    <canvas id="myChart"></canvas>
    @*<canvas id="myChart3"></canvas>*@
    <canvas id="myChart2" width="400" height="400"></canvas>


    <!--Here is the part for non chart-->
    <div class="container text-center my-3">
        <div align="left">
            Welcome, @ViewData["StaffName"]! <!--insert name here, for now, hardcoded-->
        </div>
        <table class="table table bordered table-striped" id="testTable">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.P)</th>
                    <th>@Html.DisplayNameFor(model => model.L)</th>
                    <th>@Html.DisplayNameFor(model => model.E)</th>
                    <th>@Html.DisplayNameFor(model => model.U)</th>
                </tr>
            </thead>
            @if (Model.ToList().Count > 0)
            {
                <tbody id="demo">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.P</td>
                            <td>@item.L</td>
                            <td>@item.E</td>
                            <td>@item.U</td>
                        </tr>
                    }
                </tbody>
            }
        </table>
    </div>

    <!-- SCRIPTS -->
    <!-- JQuery -->
    <script type="text/javascript" src="~/js/jquery-3.3.1.min.js"></script>
    <!-- Bootstrap tooltips -->
    <script type="text/javascript" src="~/js/popper.min.js"></script>
    <!-- Bootstrap core JavaScript -->
    <script type="text/javascript" src="~/js/bootstrap.min.js"></script>
    <!-- MDB core JavaScript -->
    <script type="text/javascript" src="~/js/mdb.min.js"></script>
</body>

<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<script>
    var ctx = document.getElementById('myChart').getContext('2d');
    var chart = new Chart(ctx, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August'], //labels for x axis
            datasets: [{
                label: 'Attendance in %',
                backgroundColor: 'rgb(255, 99, 132)',
                borderColor: 'rgb(255, 99, 132)',
                data: [100, 90, 95, 95, 90, 95, 85, 90] //actual dataset, which can be taken from the database or google sheets and calculated
                //take in data, calculate avg of month and display? compare to other months, semesters or years? have a warning when drops below a certain value
            }]
        },

        // Configuration options go here
        options: {}
    });
</script>

<script type="text/javascript" src="~/js/jquery-3.3.1.min.js"></script>

<script>
    $(function () {
        //var sheetUrl = 'https://spreadsheets.google.com/feeds/cells/1f_CjIkzfLWNJYsgOf8CpCgm4xqnepNB0m4UwXrN3TTQ/1/public/values?alt=json';
        var sheetUrl = 'https://spreadsheets.google.com/feeds/cells/1O7RMsXpuGPbAz5cmwwSlkKTIs3Ip7wOuymLa2rvqrSs/1/public/values?alt=json';
        $.getJSON(sheetUrl, function (data) {
            var entry = data.feed.entry;
            console.log(entry);
            var weeks = []; // the leftmost column of the Google Sheets

            for (var i = 3; i < entry.length; i += 1) {
                weeks.push(entry[i].content.$t);

            };
        });


        //var entry = data.feed.entry;
        //var days = []; // the leftmost column of the Google Sheets
        //var myatd = []; // second-left column

        ////days loop i = 3 to 16
        //for (var i = 3; i < 4 ; i += 2){
        //    // entry[i].content.$t retrieves the content of each cell
        //    days.push(entry[i].content.$t);
        //    //myatd.push(entry[i + 5].content.$t);
        //  }

        //console.log(entry);
        //console.log(days);
        //console.log(myatd);
    });
</script>


@*//    var ctx = document.getElementById("myChart3").getContext('2d');
    //var myChart3 = new Chart(ctx, {
    //          type: 'line',
    //    data: {
    //        labels:
    //              datasets: [{
    //                  label:
    //                  fill: false,
    //                  data:
    //                  borderColor: '#F3A68E',
    //                  borderWidth: 3,
    //                  backgroundColor: '#F3A68E',
    //                  borderDash: [10,5],
    //              },{
    //                label: 'Impressions',
    //                fill: false,
    //                data: imp,
    //                borderColor: '#698C01',
    //                borderWidth: 3,
    //                backgroundColor: '#698C01',
    //                borderDash: [10,5],
    //              }
    //            ]
    //          },
    //          options: {
    //              scales: {
    //                  yAxes: [{
    //                      ticks: {
    //                          beginAtZero:true
    //                      }
    //                  }]
    //              },
    //              legend: {
    //                position: 'bottom',
    //                labels:{
    //                  boxWidth: 15,
    //                  fontSize: 15,
    //                },
    //              },
    //          }
    //});*@

</script>

<script>
    var ctx = document.getElementById('myChart2');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
            datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>